# ==============================================
# API Security Configuration
# ==============================================
# Copy this file to .env.local and update with your values
# NEVER commit actual keys to version control!

# ==============================================
# ENCRYPTION SETTINGS
# ==============================================

# Enable/disable API payload encryption
# Set to 'false' in development if you want to see raw payloads
# MUST be 'true' in production
VITE_API_ENCRYPTION_ENABLED=true

# API Encryption Key
# IMPORTANT: This MUST be changed in production!
# Generate a strong random key using:
#   - Node.js: crypto.randomBytes(32).toString('base64')
#   - Online: https://www.random.org/passwords/ (32 chars)
#   - Command: openssl rand -base64 32
# Keep this secret and secure!
VITE_API_ENCRYPTION_KEY=your-256-bit-encryption-key-change-in-production

# HMAC Signing Key
# IMPORTANT: This MUST be changed in production!
# Generate separately from encryption key
# Used for request signing and integrity verification
VITE_API_HMAC_KEY=your-hmac-signing-key-change-in-production

# ==============================================
# HTTPS & SECURITY
# ==============================================

# Enforce HTTPS for all API requests
# Set to 'false' only in development with localhost
# MUST be 'true' in production
VITE_ENFORCE_HTTPS=true

# Enable detailed request/response logging
# Useful for debugging security issues
# Should be 'false' in production (performance)
VITE_ENABLE_REQUEST_LOGGING=false

# ==============================================
# BACKEND ENDPOINTS
# ==============================================

# Main API URL
# Development: http://localhost:8000
# Production: https://api.betterandbliss.com
VITE_API_URL=https://api.betterandbliss.com

# Backend URL (if different from API URL)
VITE_BACKEND_URL=https://api.betterandbliss.com

# ==============================================
# DEVELOPMENT SETTINGS
# ==============================================

# Quick development mode setup
# Uncomment these for local development:

# VITE_API_ENCRYPTION_ENABLED=false
# VITE_ENFORCE_HTTPS=false
# VITE_ENABLE_REQUEST_LOGGING=true
# VITE_API_URL=http://localhost:8000

# ==============================================
# PRODUCTION SETTINGS (Example)
# ==============================================

# For production, use environment variables set by:
# - CI/CD pipeline
# - Cloud provider secrets manager (AWS Secrets Manager, GCP Secret Manager, etc.)
# - Docker secrets
# - Kubernetes secrets

# Example production values (DO NOT use these actual values!):
# VITE_API_ENCRYPTION_ENABLED=true
# VITE_ENFORCE_HTTPS=true
# VITE_ENABLE_REQUEST_LOGGING=false
# VITE_API_URL=https://api.betterandbliss.com
# VITE_API_ENCRYPTION_KEY=<from-secrets-manager>
# VITE_API_HMAC_KEY=<from-secrets-manager>

# ==============================================
# KEY ROTATION
# ==============================================

# When rotating keys:
# 1. Generate new keys
# 2. Update both frontend and backend simultaneously
# 3. Or support multiple keys during transition period
# 4. Document rotation date and reason

# Last key rotation: YYYY-MM-DD
# Next rotation due: YYYY-MM-DD

# ==============================================
# SECURITY NOTES
# ==============================================

# ⚠️  IMPORTANT SECURITY REMINDERS:
#
# 1. NEVER commit this file with real keys to version control
# 2. Add .env.local to .gitignore
# 3. Use different keys for each environment (dev, staging, prod)
# 4. Rotate keys periodically (recommended: every 90 days)
# 5. Use a secrets manager in production
# 6. Monitor security logs regularly
# 7. Test encryption/decryption thoroughly before production
# 8. Ensure backend uses same keys
# 9. Use HTTPS in production (required!)
# 10. Train team on key management best practices

# ==============================================
# GENERATING SECURE KEYS
# ==============================================

# Method 1: Node.js
# node -e "console.log(require('crypto').randomBytes(32).toString('base64'))"

# Method 2: OpenSSL
# openssl rand -base64 32

# Method 3: Python
# python -c "import secrets; print(secrets.token_urlsafe(32))"

# Method 4: Online (use with caution)
# https://www.random.org/passwords/?num=1&len=32&format=plain&rnd=new

# ==============================================
# TROUBLESHOOTING
# ==============================================

# If you encounter "Failed to encrypt/decrypt" errors:
# 1. Verify keys match between frontend and backend
# 2. Check browser console for detailed error messages
# 3. Ensure Web Crypto API is supported (modern browsers only)
# 4. Try disabling encryption temporarily to isolate issue

# If you encounter "HTTPS required" errors:
# 1. Set VITE_ENFORCE_HTTPS=false for local development
# 2. Use HTTPS in production (required!)
# 3. Check that API_URL uses https:// protocol

# ==============================================
# SUPPORT
# ==============================================

# Documentation: docs/API_SECURITY.md
# Security issues: security@betterandbliss.com
# General support: GitHub Issues
